{
    "Diagrams": [
        {
            "Description": "The left diagram is a binary tree where each node has at most two children, and the right diagram is a tree where the root node has three children.",
            "Summary": "Comparison between a binary tree and a non-binary tree.",
            "Interpretation": "The left tree is a binary tree since it adheres to the property of having at most two children per node, while the right tree does not.",
            "Index": "1",
            "Text": "Binary tree\nchildren \u2264 2",
            "Equations": [],
            "Related Concepts": [
                "Binary Tree",
                "Tree Data Structure"
            ],
            "Reillustration": "https://en.wikipedia.org/wiki/Binary_tree"
        },
        {
            "Description": "A binary tree with values 9, 4, 1, 7, 6, 10, 13, and 15, showing a highlighted path of traversal and comparisons.",
            "Summary": "Binary Search Tree with a highlighted path showing traversal logic.",
            "Interpretation": "This diagram represents a binary search tree (BST) where each left child node has a lesser value and each right child node has a greater value.",
            "Index": "2",
            "Text": "9\n9 > 4\n9 < 10\n7 < 9\nh = O(l)",
            "Equations": [],
            "Related Concepts": [
                "Binary Search Tree",
                "Tree Traversal",
                "Algorithm Complexity"
            ],
            "Reillustration": "https://en.wikipedia.org/wiki/Binary_search_tree"
        },
        {
            "Description": "Formal definition of Big-O notation, describing the upper bound of an algorithm's complexity.",
            "Summary": "Definition of Big-O notation and its formal mathematical representation.",
            "Interpretation": "Big-O notation is used to describe the upper bound of an algorithm's complexity, focusing on the worst-case scenario.",
            "Index": "3",
            "Text": "definition\nbig-O\nf(n) = O(g(n))\n\\exists C, N_0 \\in \\mathbb{R}, st, \\forall N \\geq N_0\n|f(N)| \\leq c \\cdot g(N)",
            "Equations": [
                "f(n) = O(g(n))",
                "\\exists C, N_0 \\in \\mathbb{R}, st, \\forall N \\geq N_0",
                "|f(N)| \\leq c \\cdot g(N)"
            ],
            "Related Concepts": [
                "Big-O Notation",
                "Algorithm Complexity"
            ],
            "Reillustration": "https://en.wikipedia.org/wiki/Big_O_notation"
        }
    ]
}